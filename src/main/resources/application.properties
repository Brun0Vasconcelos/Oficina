# nome da aplicação (para logs)
spring.application.name=projeto

# --- Conexão com PostgreSQL ---
# Substitua nos seus env vars ou diretamente aqui:
#   DB_HOST   (default: localhost)
#   DB_PORT   (default: 5432)
#   DB_NAME1   (default: orcamento)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME1:orcamento}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# evita LazyInitializationException fora de transação
spring.jpa.open-in-view=true

# --- Datas em dd/MM/yyyy ---
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=dd/MM/yyyy

# --- Swagger / OpenAPI (URL base da sua API) ---
swagger.server-url=${SWAGGER_SERVER_URL:http://localhost:8080}



# --- CORS / Path Matching / Charset ---
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

logging.level.org.springdoc=DEBUG
logging.level.org.springdoc.core=TRACE


# Faz o Spring Boot incluir a mensagem e a stacktrace no payload de erro
server.error.include-message=always
server.error.include-stacktrace=always

management.endpoints.web.exposure.include=health,info,httptrace

